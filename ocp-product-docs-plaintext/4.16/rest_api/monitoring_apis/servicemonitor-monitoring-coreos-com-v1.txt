# ServiceMonitor [monitoring.coreos.com/v1]


Description:: 
ServiceMonitor defines monitoring for a set of services.
Type:: object
Required:: 
* spec

# Specification



## .spec

Description:: 
Specification of desired Service selection for target discovery by Prometheus.
Type:: object
Required:: 
* selector



## .spec.attachMetadata

Description:: 
attachMetadata defines additional metadata which is added to the discovered targets.
 It requires Prometheus >= v2.37.0.
Type:: object



## .spec.endpoints

Description:: 
List of endpoints part of this ServiceMonitor.
Type:: array

## .spec.endpoints[]

Description:: 
Endpoint defines an endpoint serving Prometheus metrics to be scraped by Prometheus.
Type:: object



## .spec.endpoints[].authorization

Description:: 
authorization configures the Authorization header credentials to use when scraping the target.
 Cannot be set at the same time as basicAuth, or oauth2.
Type:: object



## .spec.endpoints[].authorization.credentials

Description:: 
Selects a key of a Secret in the namespace that contains the credentials for authentication.
Type:: object
Required:: 
* key



## .spec.endpoints[].basicAuth

Description:: 
basicAuth configures the Basic Authentication credentials to use when scraping the target.
 Cannot be set at the same time as authorization, or oauth2.
Type:: object



## .spec.endpoints[].basicAuth.password

Description:: 
password specifies a key of a Secret containing the password for authentication.
Type:: object
Required:: 
* key



## .spec.endpoints[].basicAuth.username

Description:: 
username specifies a key of a Secret containing the username for authentication.
Type:: object
Required:: 
* key



## .spec.endpoints[].bearerTokenSecret

Description:: 
bearerTokenSecret specifies a key of a Secret containing the bearer token for scraping targets. The secret needs to be in the same namespace as the ServiceMonitor object and readable by the Prometheus Operator.
 Deprecated: use authorization instead.
Type:: object
Required:: 
* key



## .spec.endpoints[].metricRelabelings

Description:: 
metricRelabelings configures the relabeling rules to apply to the samples before ingestion.
Type:: array

## .spec.endpoints[].metricRelabelings[]

Description:: 
RelabelConfig allows dynamic rewriting of the label set for targets, alerts, scraped samples and remote write samples.
 More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
Type:: object



## .spec.endpoints[].oauth2

Description:: 
oauth2 configures the OAuth2 settings to use when scraping the target.
 It requires Prometheus >= 2.27.0.
 Cannot be set at the same time as authorization, or basicAuth.
Type:: object
Required:: 
* clientId
* clientSecret
* tokenUrl



## .spec.endpoints[].oauth2.clientId

Description:: 
clientId specifies a key of a Secret or ConfigMap containing the OAuth2 client's ID.
Type:: object



## .spec.endpoints[].oauth2.clientId.configMap

Description:: 
ConfigMap containing data to use for the targets.
Type:: object
Required:: 
* key



## .spec.endpoints[].oauth2.clientId.secret

Description:: 
Secret containing data to use for the targets.
Type:: object
Required:: 
* key



## .spec.endpoints[].oauth2.clientSecret

Description:: 
clientSecret specifies a key of a Secret containing the OAuth2 client's secret.
Type:: object
Required:: 
* key



## .spec.endpoints[].params

Description:: 
params define optional HTTP URL parameters.
Type:: object

## .spec.endpoints[].relabelings

Description:: 
relabelings configures the relabeling rules to apply the target's metadata labels.
 The Operator automatically adds relabelings for a few standard Kubernetes fields.
 The original scrape job's name is available via the __tmp_prometheus_job_name label.
 More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
Type:: array

## .spec.endpoints[].relabelings[]

Description:: 
RelabelConfig allows dynamic rewriting of the label set for targets, alerts, scraped samples and remote write samples.
 More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
Type:: object



## .spec.endpoints[].tlsConfig

Description:: 
TLS configuration to use when scraping the target.
Type:: object



## .spec.endpoints[].tlsConfig.ca

Description:: 
Certificate authority used when verifying server certificates.
Type:: object



## .spec.endpoints[].tlsConfig.ca.configMap

Description:: 
ConfigMap containing data to use for the targets.
Type:: object
Required:: 
* key



## .spec.endpoints[].tlsConfig.ca.secret

Description:: 
Secret containing data to use for the targets.
Type:: object
Required:: 
* key



## .spec.endpoints[].tlsConfig.cert

Description:: 
Client certificate to present when doing client-authentication.
Type:: object



## .spec.endpoints[].tlsConfig.cert.configMap

Description:: 
ConfigMap containing data to use for the targets.
Type:: object
Required:: 
* key



## .spec.endpoints[].tlsConfig.cert.secret

Description:: 
Secret containing data to use for the targets.
Type:: object
Required:: 
* key



## .spec.endpoints[].tlsConfig.keySecret

Description:: 
Secret containing the client key file for the targets.
Type:: object
Required:: 
* key



## .spec.namespaceSelector

Description:: 
Selector to select which namespaces the Kubernetes Endpoints objects are discovered from.
Type:: object



## .spec.selector

Description:: 
Label selector to select the Kubernetes Endpoints objects.
Type:: object



## .spec.selector.matchExpressions

Description:: 
matchExpressions is a list of label selector requirements. The requirements are ANDed.
Type:: array

## .spec.selector.matchExpressions[]

Description:: 
A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
Type:: object
Required:: 
* key
* operator



# API endpoints

The following API endpoints are available:

* /apis/monitoring.coreos.com/v1/servicemonitors
* GET: list objects of kind ServiceMonitor
* /apis/monitoring.coreos.com/v1/namespaces/{namespace}/servicemonitors
* DELETE: delete collection of ServiceMonitor
* GET: list objects of kind ServiceMonitor
* POST: create a ServiceMonitor
* /apis/monitoring.coreos.com/v1/namespaces/{namespace}/servicemonitors/{name}
* DELETE: delete a ServiceMonitor
* GET: read the specified ServiceMonitor
* PATCH: partially update the specified ServiceMonitor
* PUT: replace the specified ServiceMonitor

## /apis/monitoring.coreos.com/v1/servicemonitors

HTTP method:: GET
Description:: list objects of kind ServiceMonitor



## /apis/monitoring.coreos.com/v1/namespaces/{namespace}/servicemonitors

HTTP method:: DELETE
Description:: delete collection of ServiceMonitor



HTTP method:: GET
Description:: list objects of kind ServiceMonitor



HTTP method:: POST
Description:: create a ServiceMonitor







## /apis/monitoring.coreos.com/v1/namespaces/{namespace}/servicemonitors/{name}



HTTP method:: DELETE
Description:: delete a ServiceMonitor





HTTP method:: GET
Description:: read the specified ServiceMonitor



HTTP method:: PATCH
Description:: partially update the specified ServiceMonitor





HTTP method:: PUT
Description:: replace the specified ServiceMonitor





