# Infrastructure [config.openshift.io/v1]


Description:: 
Infrastructure holds cluster-wide information about Infrastructure.  The canonical name is cluster
 Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).
Type:: object
Required:: 
* spec

# Specification



## .spec

Description:: 
spec holds user settable values for configuration
Type:: object



## .spec.cloudConfig

Description:: 
cloudConfig is a reference to a ConfigMap containing the cloud provider configuration file. This configuration file is used to configure the Kubernetes cloud provider integration when using the built-in cloud provider integration or the external cloud controller manager. The namespace for this config map is openshift-config.
 cloudConfig should only be consumed by the kube_cloud_config controller. The controller is responsible for using the user configuration in the spec for various platforms and combining that with the user provided ConfigMap in this field to create a stitched kube cloud config. The controller generates a ConfigMap kube-cloud-config in openshift-config-managed namespace with the kube cloud config is stored in cloud.conf key. All the clients are expected to use the generated ConfigMap only.
Type:: object



## .spec.platformSpec

Description:: 
platformSpec holds desired information specific to the underlying infrastructure provider.
Type:: object



## .spec.platformSpec.alibabaCloud

Description:: 
AlibabaCloud contains settings specific to the Alibaba Cloud infrastructure provider.
Type:: object

## .spec.platformSpec.aws

Description:: 
AWS contains settings specific to the Amazon Web Services infrastructure provider.
Type:: object



## .spec.platformSpec.aws.serviceEndpoints

Description:: 
serviceEndpoints list contains custom endpoints which will override default service endpoint of AWS Services. There must be only one ServiceEndpoint for a service.
Type:: array

## .spec.platformSpec.aws.serviceEndpoints[]

Description:: 
AWSServiceEndpoint store the configuration of a custom url to override existing defaults of AWS Services.
Type:: object



## .spec.platformSpec.azure

Description:: 
Azure contains settings specific to the Azure infrastructure provider.
Type:: object

## .spec.platformSpec.baremetal

Description:: 
BareMetal contains settings specific to the BareMetal platform.
Type:: object



## .spec.platformSpec.equinixMetal

Description:: 
EquinixMetal contains settings specific to the Equinix Metal infrastructure provider.
Type:: object

## .spec.platformSpec.external

Description:: 
ExternalPlatformType represents generic infrastructure provider. Platform-specific components should be supplemented separately.
Type:: object



## .spec.platformSpec.gcp

Description:: 
GCP contains settings specific to the Google Cloud Platform infrastructure provider.
Type:: object

## .spec.platformSpec.ibmcloud

Description:: 
IBMCloud contains settings specific to the IBMCloud infrastructure provider.
Type:: object

## .spec.platformSpec.kubevirt

Description:: 
Kubevirt contains settings specific to the kubevirt infrastructure provider.
Type:: object

## .spec.platformSpec.nutanix

Description:: 
Nutanix contains settings specific to the Nutanix infrastructure provider.
Type:: object
Required:: 
* prismCentral
* prismElements



## .spec.platformSpec.nutanix.failureDomains

Description:: 
failureDomains configures failure domains information for the Nutanix platform. When set, the failure domains defined here may be used to spread Machines across prism element clusters to improve fault tolerance of the cluster.
Type:: array

## .spec.platformSpec.nutanix.failureDomains[]

Description:: 
NutanixFailureDomain configures failure domain information for the Nutanix platform.
Type:: object
Required:: 
* cluster
* name
* subnets



## .spec.platformSpec.nutanix.failureDomains[].cluster

Description:: 
cluster is to identify the cluster (the Prism Element under management of the Prism Central), in which the Machine's VM will be created. The cluster identifier (uuid or name) can be obtained from the Prism Central console or using the prism_central API.
Type:: object
Required:: 
* type



## .spec.platformSpec.nutanix.failureDomains[].subnets

Description:: 
subnets holds a list of identifiers (one or more) of the cluster's network subnets for the Machine's VM to connect to. The subnet identifiers (uuid or name) can be obtained from the Prism Central console or using the prism_central API.
Type:: array

## .spec.platformSpec.nutanix.failureDomains[].subnets[]

Description:: 
NutanixResourceIdentifier holds the identity of a Nutanix PC resource (cluster, image, subnet, etc.)
Type:: object
Required:: 
* type



## .spec.platformSpec.nutanix.prismCentral

Description:: 
prismCentral holds the endpoint address and port to access the Nutanix Prism Central. When a cluster-wide proxy is installed, by default, this endpoint will be accessed via the proxy. Should you wish for communication with this endpoint not to be proxied, please add the endpoint to the proxy spec.noProxy list.
Type:: object
Required:: 
* address
* port



## .spec.platformSpec.nutanix.prismElements

Description:: 
prismElements holds one or more endpoint address and port data to access the Nutanix Prism Elements (clusters) of the Nutanix Prism Central. Currently we only support one Prism Element (cluster) for an OpenShift cluster, where all the Nutanix resources (VMs, subnets, volumes, etc.) used in the OpenShift cluster are located. In the future, we may support Nutanix resources (VMs, etc.) spread over multiple Prism Elements (clusters) of the Prism Central.
Type:: array

## .spec.platformSpec.nutanix.prismElements[]

Description:: 
NutanixPrismElementEndpoint holds the name and endpoint data for a Prism Element (cluster)
Type:: object
Required:: 
* endpoint
* name



## .spec.platformSpec.nutanix.prismElements[].endpoint

Description:: 
endpoint holds the endpoint address and port data of the Prism Element (cluster). When a cluster-wide proxy is installed, by default, this endpoint will be accessed via the proxy. Should you wish for communication with this endpoint not to be proxied, please add the endpoint to the proxy spec.noProxy list.
Type:: object
Required:: 
* address
* port



## .spec.platformSpec.openstack

Description:: 
OpenStack contains settings specific to the OpenStack infrastructure provider.
Type:: object



## .spec.platformSpec.ovirt

Description:: 
Ovirt contains settings specific to the oVirt infrastructure provider.
Type:: object

## .spec.platformSpec.powervs

Description:: 
PowerVS contains settings specific to the IBM Power Systems Virtual Servers infrastructure provider.
Type:: object



## .spec.platformSpec.powervs.serviceEndpoints

Description:: 
serviceEndpoints is a list of custom endpoints which will override the default service endpoints of a Power VS service.
Type:: array

## .spec.platformSpec.powervs.serviceEndpoints[]

Description:: 
PowervsServiceEndpoint stores the configuration of a custom url to override existing defaults of PowerVS Services.
Type:: object
Required:: 
* name
* url



## .spec.platformSpec.vsphere

Description:: 
VSphere contains settings specific to the VSphere infrastructure provider.
Type:: object



## .spec.platformSpec.vsphere.failureDomains

Description:: 
failureDomains contains the definition of region, zone and the vCenter topology. If this is omitted failure domains (regions and zones) will not be used.
Type:: array

## .spec.platformSpec.vsphere.failureDomains[]

Description:: 
VSpherePlatformFailureDomainSpec holds the region and zone failure domain and the vCenter topology of that failure domain.
Type:: object
Required:: 
* name
* region
* server
* topology
* zone



## .spec.platformSpec.vsphere.failureDomains[].topology

Description:: 
Topology describes a given failure domain using vSphere constructs
Type:: object
Required:: 
* computeCluster
* datacenter
* datastore
* networks



## .spec.platformSpec.vsphere.nodeNetworking

Description:: 
nodeNetworking contains the definition of internal and external network constraints for assigning the node's networking. If this field is omitted, networking defaults to the legacy address selection behavior which is to only support a single address and return the first one found.
Type:: object



## .spec.platformSpec.vsphere.nodeNetworking.external

Description:: 
external represents the network configuration of the node that is externally routable.
Type:: object



## .spec.platformSpec.vsphere.nodeNetworking.internal

Description:: 
internal represents the network configuration of the node that is routable only within the cluster.
Type:: object



## .spec.platformSpec.vsphere.vcenters

Description:: 
vcenters holds the connection details for services to communicate with vCenter. Currently, only a single vCenter is supported. ---
Type:: array

## .spec.platformSpec.vsphere.vcenters[]

Description:: 
VSpherePlatformVCenterSpec stores the vCenter connection fields. This is used by the vSphere CCM.
Type:: object
Required:: 
* datacenters
* server



## .status

Description:: 
status holds observed values from the cluster. They may not be overridden.
Type:: object



## .status.platformStatus

Description:: 
platformStatus holds status information specific to the underlying infrastructure provider.
Type:: object



## .status.platformStatus.alibabaCloud

Description:: 
AlibabaCloud contains settings specific to the Alibaba Cloud infrastructure provider.
Type:: object
Required:: 
* region



## .status.platformStatus.alibabaCloud.resourceTags

Description:: 
resourceTags is a list of additional tags to apply to Alibaba Cloud resources created for the cluster.
Type:: array

## .status.platformStatus.alibabaCloud.resourceTags[]

Description:: 
AlibabaCloudResourceTag is the set of tags to add to apply to resources.
Type:: object
Required:: 
* key
* value



## .status.platformStatus.aws

Description:: 
AWS contains settings specific to the Amazon Web Services infrastructure provider.
Type:: object



## .status.platformStatus.aws.resourceTags

Description:: 
resourceTags is a list of additional tags to apply to AWS resources created for the cluster. See https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html for information on tagging AWS resources. AWS supports a maximum of 50 tags per resource. OpenShift reserves 25 tags for its use, leaving 25 tags available for the user.
Type:: array

## .status.platformStatus.aws.resourceTags[]

Description:: 
AWSResourceTag is a tag to apply to AWS resources created for the cluster.
Type:: object
Required:: 
* key
* value



## .status.platformStatus.aws.serviceEndpoints

Description:: 
ServiceEndpoints list contains custom endpoints which will override default service endpoint of AWS Services. There must be only one ServiceEndpoint for a service.
Type:: array

## .status.platformStatus.aws.serviceEndpoints[]

Description:: 
AWSServiceEndpoint store the configuration of a custom url to override existing defaults of AWS Services.
Type:: object



## .status.platformStatus.azure

Description:: 
Azure contains settings specific to the Azure infrastructure provider.
Type:: object



## .status.platformStatus.azure.resourceTags

Description:: 
resourceTags is a list of additional tags to apply to Azure resources created for the cluster. See https://docs.microsoft.com/en-us/rest/api/resources/tags for information on tagging Azure resources. Due to limitations on Automation, Content Delivery Network, DNS Azure resources, a maximum of 15 tags may be applied. OpenShift reserves 5 tags for internal use, allowing 10 tags for user configuration.
Type:: array

## .status.platformStatus.azure.resourceTags[]

Description:: 
AzureResourceTag is a tag to apply to Azure resources created for the cluster.
Type:: object
Required:: 
* key
* value



## .status.platformStatus.baremetal

Description:: 
BareMetal contains settings specific to the BareMetal platform.
Type:: object



## .status.platformStatus.baremetal.loadBalancer

Description:: 
loadBalancer defines how the load balancer used by the cluster is configured.
Type:: object



## .status.platformStatus.equinixMetal

Description:: 
EquinixMetal contains settings specific to the Equinix Metal infrastructure provider.
Type:: object



## .status.platformStatus.external

Description:: 
External contains settings specific to the generic External infrastructure provider.
Type:: object



## .status.platformStatus.external.cloudControllerManager

Description:: 
cloudControllerManager contains settings specific to the external Cloud Controller Manager (a.k.a. CCM or CPI). When omitted, new nodes will be not tainted and no extra initialization from the cloud controller manager is expected.
Type:: object



## .status.platformStatus.gcp

Description:: 
GCP contains settings specific to the Google Cloud Platform infrastructure provider.
Type:: object



## .status.platformStatus.ibmcloud

Description:: 
IBMCloud contains settings specific to the IBMCloud infrastructure provider.
Type:: object



## .status.platformStatus.ibmcloud.serviceEndpoints

Description:: 
serviceEndpoints is a list of custom endpoints which will override the default service endpoints of an IBM Cloud service. These endpoints are consumed by components within the cluster to reach the respective IBM Cloud Services.
Type:: array

## .status.platformStatus.ibmcloud.serviceEndpoints[]

Description:: 
IBMCloudServiceEndpoint stores the configuration of a custom url to override existing defaults of IBM Cloud Services.
Type:: object
Required:: 
* name
* url



## .status.platformStatus.kubevirt

Description:: 
Kubevirt contains settings specific to the kubevirt infrastructure provider.
Type:: object



## .status.platformStatus.nutanix

Description:: 
Nutanix contains settings specific to the Nutanix infrastructure provider.
Type:: object



## .status.platformStatus.nutanix.loadBalancer

Description:: 
loadBalancer defines how the load balancer used by the cluster is configured.
Type:: object



## .status.platformStatus.openstack

Description:: 
OpenStack contains settings specific to the OpenStack infrastructure provider.
Type:: object



## .status.platformStatus.openstack.loadBalancer

Description:: 
loadBalancer defines how the load balancer used by the cluster is configured.
Type:: object



## .status.platformStatus.ovirt

Description:: 
Ovirt contains settings specific to the oVirt infrastructure provider.
Type:: object



## .status.platformStatus.ovirt.loadBalancer

Description:: 
loadBalancer defines how the load balancer used by the cluster is configured.
Type:: object



## .status.platformStatus.powervs

Description:: 
PowerVS contains settings specific to the Power Systems Virtual Servers infrastructure provider.
Type:: object



## .status.platformStatus.powervs.serviceEndpoints

Description:: 
serviceEndpoints is a list of custom endpoints which will override the default service endpoints of a Power VS service.
Type:: array

## .status.platformStatus.powervs.serviceEndpoints[]

Description:: 
PowervsServiceEndpoint stores the configuration of a custom url to override existing defaults of PowerVS Services.
Type:: object
Required:: 
* name
* url



## .status.platformStatus.vsphere

Description:: 
VSphere contains settings specific to the VSphere infrastructure provider.
Type:: object



## .status.platformStatus.vsphere.loadBalancer

Description:: 
loadBalancer defines how the load balancer used by the cluster is configured.
Type:: object



# API endpoints

The following API endpoints are available:

* /apis/config.openshift.io/v1/infrastructures
* DELETE: delete collection of Infrastructure
* GET: list objects of kind Infrastructure
* POST: create an Infrastructure
* /apis/config.openshift.io/v1/infrastructures/{name}
* DELETE: delete an Infrastructure
* GET: read the specified Infrastructure
* PATCH: partially update the specified Infrastructure
* PUT: replace the specified Infrastructure
* /apis/config.openshift.io/v1/infrastructures/{name}/status
* GET: read status of the specified Infrastructure
* PATCH: partially update status of the specified Infrastructure
* PUT: replace status of the specified Infrastructure

## /apis/config.openshift.io/v1/infrastructures

HTTP method:: DELETE
Description:: delete collection of Infrastructure



HTTP method:: GET
Description:: list objects of kind Infrastructure



HTTP method:: POST
Description:: create an Infrastructure







## /apis/config.openshift.io/v1/infrastructures/{name}



HTTP method:: DELETE
Description:: delete an Infrastructure





HTTP method:: GET
Description:: read the specified Infrastructure



HTTP method:: PATCH
Description:: partially update the specified Infrastructure





HTTP method:: PUT
Description:: replace the specified Infrastructure







## /apis/config.openshift.io/v1/infrastructures/{name}/status



HTTP method:: GET
Description:: read status of the specified Infrastructure



HTTP method:: PATCH
Description:: partially update status of the specified Infrastructure





HTTP method:: PUT
Description:: replace status of the specified Infrastructure





