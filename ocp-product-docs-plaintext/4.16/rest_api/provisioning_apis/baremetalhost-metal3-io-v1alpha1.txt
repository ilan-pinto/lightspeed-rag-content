# BareMetalHost [metal3.io/v1alpha1]


Description:: 
BareMetalHost is the Schema for the baremetalhosts API
Type:: object

# Specification



## .spec

Description:: 
BareMetalHostSpec defines the desired state of BareMetalHost.
Type:: object
Required:: 
* online



## .spec.bmc

Description:: 
How do we connect to the BMC?
Type:: object
Required:: 
* address
* credentialsName



## .spec.consumerRef

Description:: 
ConsumerRef can be used to store information about something that is using a host. When it is not empty, the host is considered "in use".
Type:: object



## .spec.customDeploy

Description:: 
A custom deploy procedure.
Type:: object
Required:: 
* method



## .spec.firmware

Description:: 
BIOS configuration for bare metal server
Type:: object



## .spec.image

Description:: 
Image holds the details of the image to be provisioned.
Type:: object
Required:: 
* url



## .spec.metaData

Description:: 
MetaData holds the reference to the Secret containing host metadata (e.g. meta_data.json) which is passed to the Config Drive.
Type:: object



## .spec.networkData

Description:: 
NetworkData holds the reference to the Secret containing network configuration (e.g content of network_data.json) which is passed to the Config Drive.
Type:: object



## .spec.raid

Description:: 
RAID configuration for bare metal server
Type:: object



## .spec.rootDeviceHints

Description:: 
Provide guidance about how to choose the device for the image being provisioned.
Type:: object



## .spec.taints

Description:: 
Taints is the full, authoritative list of taints to apply to the corresponding Machine. This list will overwrite any modifications made to the Machine on an ongoing basis.
Type:: array

## .spec.taints[]

Description:: 
The node this Taint is attached to has the "effect" on any pod that does not tolerate the Taint.
Type:: object
Required:: 
* effect
* key



## .spec.userData

Description:: 
UserData holds the reference to the Secret containing the user data to be passed to the host before it boots.
Type:: object



## .status

Description:: 
BareMetalHostStatus defines the observed state of BareMetalHost.
Type:: object
Required:: 
* errorCount
* errorMessage
* hardwareProfile
* operationalStatus
* poweredOn
* provisioning



## .status.goodCredentials

Description:: 
the last credentials we were able to validate as working
Type:: object



## .status.goodCredentials.credentials

Description:: 
SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
Type:: object



## .status.hardware

Description:: 
The hardware discovered to exist on the host.
Type:: object



## .status.hardware.cpu

Description:: 
CPU describes one processor on the host.
Type:: object



## .status.hardware.firmware

Description:: 
Firmware describes the firmware on the host.
Type:: object



## .status.hardware.firmware.bios

Description:: 
The BIOS for this firmware
Type:: object



## .status.hardware.nics

Description:: 

Type:: array

## .status.hardware.nics[]

Description:: 
NIC describes one network interface on the host.
Type:: object



## .status.hardware.nics[].vlans

Description:: 
The VLANs available
Type:: array

## .status.hardware.nics[].vlans[]

Description:: 
VLAN represents the name and ID of a VLAN.
Type:: object



## .status.hardware.storage

Description:: 

Type:: array

## .status.hardware.storage[]

Description:: 
Storage describes one storage device (disk, SSD, etc.) on the host.
Type:: object



## .status.hardware.systemVendor

Description:: 
HardwareSystemVendor stores details about the whole hardware system.
Type:: object



## .status.operationHistory

Description:: 
OperationHistory holds information about operations performed on this host.
Type:: object



## .status.operationHistory.deprovision

Description:: 
OperationMetric contains metadata about an operation (inspection, provisioning, etc.) used for tracking metrics.
Type:: object



## .status.operationHistory.inspect

Description:: 
OperationMetric contains metadata about an operation (inspection, provisioning, etc.) used for tracking metrics.
Type:: object



## .status.operationHistory.provision

Description:: 
OperationMetric contains metadata about an operation (inspection, provisioning, etc.) used for tracking metrics.
Type:: object



## .status.operationHistory.register

Description:: 
OperationMetric contains metadata about an operation (inspection, provisioning, etc.) used for tracking metrics.
Type:: object



## .status.provisioning

Description:: 
Information tracked by the provisioner.
Type:: object
Required:: 
* ID
* state



## .status.provisioning.customDeploy

Description:: 
Custom deploy procedure applied to the host.
Type:: object
Required:: 
* method



## .status.provisioning.firmware

Description:: 
The Bios set by the user
Type:: object



## .status.provisioning.image

Description:: 
Image holds the details of the last image successfully provisioned to the host.
Type:: object
Required:: 
* url



## .status.provisioning.raid

Description:: 
The Raid set by the user
Type:: object



## .status.provisioning.rootDeviceHints

Description:: 
The RootDevicehints set by the user
Type:: object



## .status.triedCredentials

Description:: 
the last credentials we sent to the provisioning backend
Type:: object



## .status.triedCredentials.credentials

Description:: 
SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
Type:: object



# API endpoints

The following API endpoints are available:

* /apis/metal3.io/v1alpha1/baremetalhosts
* GET: list objects of kind BareMetalHost
* /apis/metal3.io/v1alpha1/namespaces/{namespace}/baremetalhosts
* DELETE: delete collection of BareMetalHost
* GET: list objects of kind BareMetalHost
* POST: create a BareMetalHost
* /apis/metal3.io/v1alpha1/namespaces/{namespace}/baremetalhosts/{name}
* DELETE: delete a BareMetalHost
* GET: read the specified BareMetalHost
* PATCH: partially update the specified BareMetalHost
* PUT: replace the specified BareMetalHost
* /apis/metal3.io/v1alpha1/namespaces/{namespace}/baremetalhosts/{name}/status
* GET: read status of the specified BareMetalHost
* PATCH: partially update status of the specified BareMetalHost
* PUT: replace status of the specified BareMetalHost

## /apis/metal3.io/v1alpha1/baremetalhosts

HTTP method:: GET
Description:: list objects of kind BareMetalHost



## /apis/metal3.io/v1alpha1/namespaces/{namespace}/baremetalhosts

HTTP method:: DELETE
Description:: delete collection of BareMetalHost



HTTP method:: GET
Description:: list objects of kind BareMetalHost



HTTP method:: POST
Description:: create a BareMetalHost







## /apis/metal3.io/v1alpha1/namespaces/{namespace}/baremetalhosts/{name}



HTTP method:: DELETE
Description:: delete a BareMetalHost





HTTP method:: GET
Description:: read the specified BareMetalHost



HTTP method:: PATCH
Description:: partially update the specified BareMetalHost





HTTP method:: PUT
Description:: replace the specified BareMetalHost







## /apis/metal3.io/v1alpha1/namespaces/{namespace}/baremetalhosts/{name}/status



HTTP method:: GET
Description:: read status of the specified BareMetalHost



HTTP method:: PATCH
Description:: partially update status of the specified BareMetalHost





HTTP method:: PUT
Description:: replace status of the specified BareMetalHost





